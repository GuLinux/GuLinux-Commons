#!/usr/bin/env python3
from datetime import datetime
import os
import sys
import subprocess
import argparse

parser = argparse.ArgumentParser(description='Cut videos using ffmpeg')
parser.add_argument('input', help='Input filename')
parser.add_argument('-o', '--output', help='Output filename', required=False)
parser.add_argument('-s', '--start', type=str, default='0', help='Start point for cutting. Should be formatted as HH:MM:SS. Special case: 0 (default) if cutting should begin from video start.')
parser.add_argument('-e', '--end', type=str, help='End point for cutting. Should be formatted as HH:MM:SS.', required=True)
parser.add_argument('-n', '--number', type=int, default=0, help='Index suffix for this video.')
parser.add_argument('-p', '--pretend', action='store_true', help='Just print ffmpeg options instead of actually running')
parser.add_argument('-v', '--video-codec', default='copy', help='Video codec (default: copy)')
parser.add_argument('--crf', help='Video CRF')
parser.add_argument('--no-audio', help='Remove audio', action='store_true')
parser.add_argument('--preset', help='Video preset')
parser.add_argument('-a', '--audio-codec', default='copy', help='Audio codec (default: copy)')


args = parser.parse_args()

start = args.start
if start == '0':
    start = '00:00:00'



filename, ext = os.path.splitext(args.input)

def output_filename(number):
    return '{}_CUT_{:03d}{}'.format(filename, number, ext)


num = args.number
print(args)
if args.output:
    output = args.output
else:
    output = output_filename(num)
    if num == 0:
        num = 1
        output = output_filename(num)
        while os.path.isfile(output):
            num += 1
            output = output_filename(num)


time_format = '%H:%M:%S'

duration_delta = datetime.strptime(args.end, time_format) - datetime.strptime(start, time_format)
duration = (datetime.strptime('00:00:00', time_format) + duration_delta) .strftime(time_format)

video_preset = ['-preset', args.preset] if args.preset else []
video_crf = ['-crf', args.crf] if args.crf else []

process_args = ['ffmpeg', '-hide_banner', '-i', args.input, '-vcodec', args.video_codec, video_preset, video_crf, '-an' if args.no_audio else ['-acodec', args.audio_codec], '-ss', start, '-t', duration, output]
process_args = [i if type(i) is list else [i] for i in process_args]
process_args = [item for sublist in process_args for item in sublist]
print(process_args)

if args.pretend:
    print(' '.join(process_args))
else:
    subprocess.run(process_args)
# ffmpeg -i "$input" -vcodec copy -acodec copy -ss "$start" -t "$end" "$output"
